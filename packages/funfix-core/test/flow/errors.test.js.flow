/*
 * Copyright (c) 2017 by The Funfix Project Developers.
 * Some rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* @flow */

// Testing wildcard import
import * as ff from "../../src/"

// Testing a la carte import
import type { Throwable } from "../../src/"
import {
  CompositeError,
  DummyError,
  NoSuchElementError,
  IllegalInheritanceError,
  IllegalStateError,
  IllegalArgumentError,
  TimeoutError
} from "../../src/"

new ff.CompositeError([])
new ff.CompositeError(["error", new Error()])
// $ExpectError
new ff.CompositeError("no list")

new CompositeError([])
new CompositeError(["error", new Error()])
// $ExpectError
new CompositeError("no list")

// ---

new ff.IllegalStateError()
new ff.IllegalStateError("message")
// $ExpectError
new ff.IllegalStateError(1)

new IllegalStateError()
new IllegalStateError("message")
// $ExpectError
new IllegalStateError(1)

// ---

new ff.IllegalInheritanceError()
new ff.IllegalInheritanceError("message")
// $ExpectError
new ff.IllegalInheritanceError(1)

new IllegalInheritanceError()
new IllegalInheritanceError("message")
// $ExpectError
new IllegalInheritanceError(1)

// ---

new ff.NoSuchElementError()
new ff.NoSuchElementError("message")
// $ExpectError
new ff.NoSuchElementError(1)

new NoSuchElementError()
new NoSuchElementError("message")
// $ExpectError
new NoSuchElementError(1)

// ---

new ff.DummyError()
new ff.DummyError("message")
// $ExpectError
new ff.DummyError(1)

new DummyError()
new DummyError("message")
// $ExpectError
new DummyError(1)

// ---

new ff.IllegalArgumentError()
new ff.IllegalArgumentError("message")
// $ExpectError
new ff.IllegalArgumentError(1)

new IllegalArgumentError()
new IllegalArgumentError("message")
// $ExpectError
new IllegalArgumentError(1)

// ---

new ff.TimeoutError()
new ff.TimeoutError("message")
// $ExpectError
new ff.TimeoutError(1)

new TimeoutError()
new TimeoutError("message")
// $ExpectError
new TimeoutError(1)

// --
const th1: Throwable = new TimeoutError()
const th2: Throwable = "string error"